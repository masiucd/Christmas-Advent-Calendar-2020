// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE



let Curry = require('bs-platform/lib/js/curry.js');
let React = require('react');

function Timer$Button(Props) {
  let {label} = Props;
  let {onClick} = Props;
  return React.createElement('button', {
    {
      onClick: onClick,
    },
    label
  );
}

let Button = /* module */ [/* make */ Timer$Button];

function Timer(Props) {
  let match = React.useReducer(
    function(state, action) {
      switch (action) {
        case 0:
          return /* record */ [
            /* seconds */ state[/* seconds */ 0],
            /* isTicking */ true,
          ];
        case 1:
          return /* record */ [
            /* seconds */ state[/* seconds */ 0],
            /* isTicking */ false,
          ];
        case 2:
          return /* record */ [
            /* seconds */ 30,
            /* isTicking */ state[/* isTicking */ 1],
          ];
        case 3:
          var match = state[/* isTicking */ 1] && state[/* seconds */ 0] > 0;
          if (match) {
            return /* record */ [
              /* seconds */ (state[/* seconds */ 0] - 1) | 0,
              /* isTicking */ state[/* isTicking */ 1],
            ];
          } else {
            return state;
          }
      }
    },
    /* record */ [/* seconds */ 30, /* isTicking */ false]
  );
  let dispatch = match[1];
  let state = match[0];
  React.useEffect(function() {
    var timerId = setInterval(function(param) {
      return Curry._1(dispatch, /* Tick */ 3);
    }, 1000);
    return function(param) {
      clearInterval(timerId);
      return /* () */ 0;
    };
  }, []);
  let match$1 = state[/* isTicking */ 1];
  return React.createElement('div', undefined, 'There are ' + (String(state[/* seconds */0]) + ' on the clock'), match$1 ? React.createElement(Timer$Button, {
          label: 'stop',
          onClick: function(_event) {
            return Curry._1(dispatch, /* Stop */ 1);
          },
        })
      : React.createElement(
          React.Fragment,
          undefined,
          React.createElement(Timer$Button, {
            label: 'START',
            onClick: function(_event) {
              return Curry._1(dispatch, /* Start */ 0);
            },
          }),
          React.createElement(Timer$Button, {
            label: 'RESET',
            onClick: function(_event) {
              return Curry._1(dispatch, /* Reset */ 2);
            },
          })
        )
  );
}

let make = Timer;

exports.Button = Button;
exports.make = make;
/* react Not a pure module */
