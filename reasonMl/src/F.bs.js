// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function adding(x, y, param) {
  if (x !== undefined) {
    var x$prime = x;
    if (y !== undefined) {
      return x$prime + y | 0;
    } else {
      return x$prime;
    }
  } else if (y !== undefined) {
    return y;
  } else {
    return 0;
  }
}

function mul(param) {
  return Caml_int32.imul(param[0], param[1]);
}

var tuple = /* tuple */[
  10,
  3
];

mul(tuple);

function add(op1, op2) {
  return op1 + op2 | 0;
}

function add2(op1, op2) {
  return op1 + op2 | 0;
}

function multiply($staropt$star, $staropt$star$1, param) {
  var x = $staropt$star !== undefined ? $staropt$star : 3;
  var y = $staropt$star$1 !== undefined ? $staropt$star$1 : 5;
  return Caml_int32.imul(x, y);
}

multiply(undefined, undefined, /* () */0);

var partial_arg = 10;

function a(param, param$1) {
  return multiply(partial_arg, param, param$1);
}

console.log(a);

exports.adding = adding;
exports.mul = mul;
exports.tuple = tuple;
exports.add = add;
exports.add2 = add2;
exports.multiply = multiply;
exports.a = a;
/*  Not a pure module */
